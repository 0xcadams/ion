diff --git a/node_modules/@pulumi/pulumi/automation/stack.js b/node_modules/@pulumi/pulumi/automation/stack.js
index 29177f3..5389d83 100644
--- a/node_modules/@pulumi/pulumi/automation/stack.js
+++ b/node_modules/@pulumi/pulumi/automation/stack.js
@@ -262,15 +262,13 @@ Event: ${line}\n${e.toString()}`);
                 yield cleanUp(logFile, yield logPromise);
             }
             // TODO: do this in parallel after this is fixed https://github.com/pulumi/pulumi/issues/6050
-            const outputs = yield this.outputs();
+            // const outputs = yield this.outputs();
             // If it's a remote workspace, explicitly set showSecrets to false to prevent attempting to
             // load the project file.
-            const summary = yield this.info(!this.isRemote && (opts === null || opts === void 0 ? void 0 : opts.showSecrets));
+            // const summary = yield this.info(!this.isRemote && (opts === null || opts === void 0 ? void 0 : opts.showSecrets));
             return {
                 stdout: upResult.stdout,
                 stderr: upResult.stderr,
-                summary: summary,
-                outputs: outputs,
             };
         });
     }
@@ -501,9 +499,14 @@ Event: ${line}\n${e.toString()}`);
             }
             const kind = this.workspace.program ? execKind.inline : execKind.local;
             args.push("--exec-kind", kind);
-            const desPromise = this.runPulumiCmd(args, opts === null || opts === void 0 ? void 0 : opts.onOutput);
-            const [desResult, logResult] = yield Promise.all([desPromise, logPromise]);
-            yield cleanUp(logFile, logResult);
+            let desResult
+            let logResult
+            try {
+              desPromise = yield this.runPulumiCmd(args, opts === null || opts === void 0 ? void 0 : opts.onOutput);
+            } finally {
+              logResult = yield logPromise;
+              yield cleanUp(logFile, logResult);
+            }
             // If it's a remote workspace, explicitly set showSecrets to false to prevent attempting to
             // load the project file.
             const summary = yield this.info(!this.isRemote && (opts === null || opts === void 0 ? void 0 : opts.showSecrets));
